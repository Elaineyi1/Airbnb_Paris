---
title: "Prices, Response Times and Review Scores for Airbnb in Paris in December 2023"
subtitle: "Predicting superhost status based on these factors"
author: "Boxuan Yi"
date: "28 Febuary 2024"
date-format: "D MMMM YYYY"
number-sections: true
bibliography: references.bib
format: pdf
---
# Introduction
Paris stands as an iconic destination, renowned for its art, culture, and rich history. This exploratory data analysis (EDA) will use the Airbnb listings in Paris, as at 12 December 2023, to explore the distribution of prices, review scores, and hosts' response times, aiming to forecast whether a host is a superhost based on these factors. The dataset is obtained from Inside Airbnb [@insideairbnbData].

The data will be processed and analyzed in R [@r] using packages readr [@readr], dplyr [@dplyr], arrow [@arrow], stringr [@stringr], ggplot2 [@ggplot2], naniar [@naniar], janitor [@Janitor], modelsummary [@modelsummary], and knitr [@knitr].

# Data Analysis
[@fig-price] (a) illustrates the distribution of nightly prices for Airbnb rentals in Paris in December 2023. The x-axis represents the price, and the y-axis shows the count of properties within each price range. [@fig-price] (b) focus on the airbnb with price exceeding 1000. This graph uses logarithmic scale that helps to visualize and compare higher prices without completely compressing the lower values.
```{r}
#| include: false
library(readr)
library(dplyr)
library(arrow)
library(stringr)
library(ggplot2)
library(naniar)
library(janitor)
library(modelsummary)
library(knitr)
```

```{r}
#| include: false
url <-
  paste0(
    "http://data.insideairbnb.com/france/ile-de-france/",
    "paris/2023-12-12/data/listings.csv.gz"
  )

airbnb_data <-
  read_csv(
    file = url,
    guess_max = 20000
  )

write_csv(airbnb_data, "airbnb_data.csv")
```

```{r}
#| include: false
# Select the variables that will be used
airbnb_data_selected <-
  airbnb_data |>
  select(
    host_id,
    host_response_time,
    host_is_superhost,
    host_total_listings_count,
    neighbourhood_cleansed,
    bathrooms,
    bedrooms,
    price,
    number_of_reviews,
    review_scores_rating,
    review_scores_accuracy,
    review_scores_value
  )

write_parquet(
  x = airbnb_data_selected, 
  sink = "2023-12-12-paris-airbnblistings-select_variables.parquet"
)

rm(airbnb_data)

# Make each price an integer for further analysis
airbnb_data_selected <-
  airbnb_data_selected |>
  mutate(
    price = str_remove_all(price, "[\\$,]"),
    price = as.integer(price)
  )
```

```{r}
#| label: fig-price
#| fig-cap: Distribution of prices of Paris Airbnb rentals in December 2023
#| echo: false
#| warning: false
#| message: false
#| layout-ncol: 2
#| fig-subcap: ["Distribution of price", "Distribution of Prices Using the Log Scale for Prices More Than $1,000"]
airbnb_data_selected |>
  ggplot(aes(x = price)) +
  geom_histogram(binwidth = 10) +
  theme_classic() +
  labs(
    x = "Price per night",
    y = "Number of properties") 

airbnb_data_selected |>
  filter(price > 1000) |>
  ggplot(aes(x = price)) +
  geom_histogram(binwidth = 10) +
  theme_classic() +
  labs(
    x = "Price per night",
    y = "Number of properties"
  ) +
  scale_y_log10()
```
Focusing on prices that are less than 1000 dollars, we can see that most properties have a price less than $250 dollars per night from [@fig-price_distribution] (a). The distribution of prices shows some bunching, indicating a tendency for prices to cluster around specific values rather than being uniformly spread across the entire range. For a closer inspection of this bunching phenomenon, [@fig-price_distribution] only shows the distribution of prices between 90 and 210. There are noticeable concentrations of prices, underscoring the non-uniform distribution pattern.
```{r}
#| label: fig-price_distribution
#| fig-cap: Distribution of prices for Airbnb listings in Paris in December 2023
#| echo: false
#| warning: false
#| message: false
#| layout-ncol: 2
#| fig-subcap: ["Prices less than $1,000 suggest some bunching", "Prices between $90 and $210 illustrate the bunching more clearly"]
airbnb_data_selected |>
  filter(price < 1000) |>
  ggplot(aes(x = price)) +
  geom_histogram(binwidth = 10) +
  theme_classic() +
  labs(
    x = "Price per night",
    y = "Number of properties"
  )

airbnb_data_selected |>
  filter(price > 90) |>
  filter(price < 210) |>
  ggplot(aes(x = price)) +
  geom_histogram(binwidth = 1) +
  theme_classic() +
  labs(
    x = "Price per night",
    y = "Number of properties"
  )
```

```{r}
#| include: false
airbnb_data_less_1000 <-
  airbnb_data_selected |>
  filter(price < 1000)
```

```{r}
#| include: false
airbnb_data_no_superhost_nas <-
  airbnb_data_less_1000 |>
  filter(!is.na(host_is_superhost)) |>
  mutate(
    host_is_superhost_binary =
      as.numeric(host_is_superhost)
  )
```

Limiting our focus to properties with complete information on whether the host is a superhost, [@fig-score] visualizes the distribution of review score ratings. Each bar in the graph represents a range of ratings, with the height indicating the number of properties falling within those ranges. The majority of scores are over 4, and many of them receive a perfect score of 5. [@fig-score_distribution] illustrates the distribution of average review scores for Airbnb listings in Paris, excluding properties with missing review scores. Similarly, the majority of scores exceed 4.
```{r}
#| message: false
#| echo: false
#| warning: false
#| label: fig-score
#| fig-cap: Distribution of review scores rating for Paris Airbnb rentals in December 2023
airbnb_data_no_superhost_nas |>
  ggplot(aes(x = review_scores_rating)) +
  geom_bar() +
  theme_classic() +
  labs(
    x = "Review scores rating",
    y = "Number of properties"
  )
```

```{r}
#| message: false
#| echo: false
#| warning: false
#| label: fig-score_distribution
#| fig-cap: Distribution of review scores for Paris Airbnb rentals in December 2023
airbnb_data_no_superhost_nas |>
  filter(!is.na(review_scores_rating)) |>
  ggplot(aes(x = review_scores_rating)) +
  geom_histogram(binwidth = 1) +
  theme_classic() +
  labs(
    x = "Average review score",
    y = "Number of properties"
  )
```

```{r}
#| include: false
airbnb_data_has_reviews <-
  airbnb_data_no_superhost_nas |>
  filter(!is.na(review_scores_rating))

airbnb_data_has_reviews |>
  count(host_response_time)
```

```{r}
#| include: false
airbnb_data_has_reviews <-
  airbnb_data_has_reviews |>
  mutate(
    host_response_time = if_else(
      host_response_time == "N/A",
      NA_character_,
      host_response_time
    ),
    host_response_time = factor(host_response_time)
  )
```

Out of the 51,978 properties with a review score and complete information about whether the host is a superhost, [@tbl-time], a table of counts for different levels of the response time by hosts, reveals that over 22,000 properties have hosts responding within an hour, while 1,243 properties experience a response time of more than a day. Additionally, there are 16,533 properties with missing response time data. To check whether the absence of response time data is related to review scores, [@fig-score_distribution_NA] shows the distribution of review scores for properties with missing response time. This distribution is actually similar to the distribution of the review scores for all the Airbnb rentals in Paris, with the majority scoring over 4
```{r}
#| message: false
#| echo: false
#| warning: false
#| label: tbl-time
#| tbl-cap: Distribution of Response Time by Hosts for Paris Airbnb in December 2023
airbnb_data_has_reviews |>
  count(host_response_time) |> kable()
```

```{r}
#| message: false
#| echo: false
#| warning: false
#| label: fig-score_distribution_NA
#| fig-cap: Distribution of review scores for properties with missing response time, for Paris Airbnb rentals in December 2023
airbnb_data_has_reviews |>
  filter(is.na(host_response_time)) |>
  ggplot(aes(x = review_scores_rating)) +
  geom_histogram(binwidth = 1) +
  theme_classic() +
  labs(
    x = "Average review score",
    y = "Number of properties"
  )
```
[@fig-missing_value] depicts the association between hosts' response time and the accuracy of review scores, distinguished by the status of missing (in red) or non-missing (in blue). Notably, the accuracy of review scores for missing values appears significantly lower comparing to the accuracy for non-missing values.
```{r}
#| message: false
#| echo: false
#| warning: false
#| label: fig-missing_value
#| fig-cap: Missing values in Paris Airbnb data, by host response time
airbnb_data_has_reviews |>
  ggplot(aes(
    x = host_response_time,
    y = review_scores_accuracy
  )) +
  geom_miss_point() +
  labs(
    x = "Host response time",
    y = "Review score accuracy",
    color = "Is missing?"
  ) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
```
For now, anyone with missing values in their response time will be excluded. Based on [@fig-properties], we can see there is a large number of hosts owning 1 to 10 properties, and the majority of hosts have only one property, with an expected long tail in the distribution.
```{r}
#| message: false
#| echo: false
#| warning: false
#| label: fig-properties
#| fig-cap: Distribution of the number of properties a host has on Airbnb, for Paris Airbnb rentals in December 2023
airbnb_data_selected <-
  airbnb_data_has_reviews |>
  filter(!is.na(host_response_time))

airbnb_data_selected |>
  ggplot(aes(x = host_total_listings_count)) +
  geom_histogram() +
  scale_x_log10() +
  labs(
    x = "Total number of listings, by host",
    y = "Number of hosts"
  )
```

```{r}
#| include: false
airbnb_data_selected <-
  airbnb_data_selected |>
  add_count(host_id) |>
  filter(n == 1) |>
  select(-n)
```

The relationship between price, review scores, and superhost status, for properties with more than one review, is shown in [@fig-relationship], with red representing the host is not a superhost, blue representing the superhost. There are a lot more non-superhosts than superhosts, and superhosts have a higher average review, regardless of property prices per night, than hosts that are not superhosts. Interestingly, [@fig-relationship] shows the prices of properties without a superhost predominantly cluster under $250, while properties with a superhost display a more evenly distributed price range.
```{r}
#| message: false
#| echo: false
#| warning: false
#| label: fig-relationship
#| fig-cap: Relationship between price and review and whether a host is a superhost, for Paris Airbnb rentals in December 2023
airbnb_data_selected |>
  filter(number_of_reviews > 1) |>
  ggplot(aes(x = price, y = review_scores_rating, color = host_is_superhost)) +
  geom_point(size = 1, alpha = 0.08) +
  theme_classic() +
  labs(
    x = "Price per night",
    y = "Average review score",
    color = "Superhost"
  ) +
  scale_color_brewer(palette = "Set1")
```

```{r}
#| include: false
airbnb_data_selected |>
  count(host_is_superhost) |>
  mutate(
    proportion = n / sum(n),
    proportion = round(proportion, digits = 2)
  )
```

```{r}
#| include: false
airbnb_data_selected |>
  tabyl(host_response_time, host_is_superhost) |>
  adorn_percentages("col") |>
  adorn_pct_formatting(digits = 0) |>
  adorn_ns() |>
  adorn_title()
```

```{r}
#| include: false
airbnb_data_selected |>
  tabyl(neighbourhood_cleansed) |>
  adorn_pct_formatting() |>
  arrange(-n) |>
  filter(n > 100) |>
  adorn_totals("row")
```

```{r}
#| include: false
logistic_reg_superhost_response_review <-
  glm(
    host_is_superhost ~
      host_response_time +
      review_scores_rating,
    data = airbnb_data_selected,
    family = binomial
  )
```

I construct a model predicting whether someone is a superhost based on response times and review scores, and the summary of the model is presented in [@tbl-model]. Each level of these factors has a positive correlation with the likelihood of being a superhost. Furthermore, having a host that responds within an hour emerges as the most crucial factor contributing to superhost designation in this dataset

```{r}
#| message: false
#| echo: false
#| warning: false
#| label: tbl-model
#| tbl-cap: Explaining whether a host is a superhost based on their response time and review scores
modelsummary(logistic_reg_superhost_response_review)
```

```{r}
#| include: false
write_parquet(
  x = airbnb_data_selected, 
  sink = "2023-12-12-paris-airbnblistings-analysis_dataset.parquet"
  )
```

\newpage
# References
